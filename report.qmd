---
title: "Assessing Top Soccer Player Statistics"
subtitle: "Report"
format: html
editor: visual
execute:
  echo: false
---

# Introduction

The motivation behind this project was to determine whether or not there were relationships between soccer players, leagues, and their respective statistics. Each observation represents a player, and columns represent descriptors such as height, weight, nationality, passes, goals scored, assists, penalties, etc. Since soccer is such a popular global sport, we aimed to answer the following research questions in our project: 1) RQ 1 (Players)- What factors influence booking frequency of players? Some factors we considered were player height, weight, age, and player rating 2) RQ 2 (Leagues)- Does aggressiveness differ between European and non-European leagues? Aggressiveness was indirectly measured through average penalties per game, average goals per minute, average shots per game, and total duels.

After conducting our data analysis, we found that the player ratings was the only significant predictor of booking frequency and that non-highly rated players are booked more than highly rated players. Of our four proxies for aggressiveness, only total duels and goals per game were significant predictors of league. Of those, we found that total duels differed between European and non-European leagues, but not goals per minute. Thus, we were not able to make conclusive claims on aggressiveness.

# Data description

## **Motivation**

This dataset was created to rank and compare the top-scoring football players across top leagues; with this, the dataset was created by a team of individuals interested in football and the application of the recorded statistics. This dataset is funded through a membership program that allows users of the data to access additional features within the dataset. While people can use the data without a membership, specific advanced tasks may require these additional features. In turn, the data could be helpful for football fans, sports betters, or data scientists.

## **Composition**

In our data set, there are 560 observations (rows) and 51 attributes (columns). Each of the rows represents a football player that is a top 20 scorer of their respective league. Of these columns, we have information on player statistics (ex/ number of appearances, number of minutes played, number of yellow or red cards attained) for the top 20 scorers from the top 27 football leagues for the 2021 league season. In the dataset of soccer player statistics, some instances may have missing information for certain attributes. This is due to the fact that each league may prioritize and record specific statistics that they find important, resulting in variations in the recorded statistics across different leagues. Additionally, some leagues are smaller than others and may not have the same telemetry.

The relationships between the individual instances (players) are made explicit through the tabular structure, where each row corresponds to a specific player, and each column represents their associated statistics. As this is game data, it was likely influenced by referee rulings, as some scores may not have counted in the final game statistics.

The data used in our analysis were collected throughout the respective football seasons of each league in the year 2021. Although the start date and duration of each league's season may have varied slightly, all instances were associated with data from their respective leagues' defined 2021 football season.

The data we utilized was not directly collected from individual soccer players. Instead, scorekeepers initially recorded it during each game and subsequently compiled it into a comprehensive dataset by the API Football team. The people involved are football players, who are aware of data collection, as this occurs during and after all of their games because sports data is typically used to make general comparisons (past/future versions of themselves, comparing their team to another, or between leagues, sports reporting (to football fans), or MVP decisions.

## **Pre-processing/cleaning/labeling**

*For more information on these processes, see our appendices.*

Once we had our data stored in a CSV file, we wrote code to load it in R and then began the cleaning process. For the main cleaning process, we utilized the clean_names function from the janitor library to make sure our variable names conform to R naming conventions. After this, we dropped the columns we would not be using by employing a select statement on our data frame. Originally, our data set had columns that were relevant to goalkeepers, defenders, and other players that are not primarily goalscorers. We also noticed that our height and weight columns were not sanitized and in character form versus numeric, thus we sanitized these columns added the units to the variable name and dropped the old columns. Lastly, we made sure to remove any columns that appeared to be duplicates like player_id_48, player_id_1, and player_firstname.

## **Uses**

The data is currently being utilized in diverse ways. Football fans can access this data to enhance their knowledge about the players or teams they support. Sports bettors rely on the data to identify historical trends and patterns within the game of football, aiding in making informed betting decisions. Additionally, numerous groups and individuals leverage the data to address research questions, similar to the purpose of our own group's analysis.

# Data analysis

```{r}
#| label: load-data
#| echo: false
#| message: false
#| warning: false

library(tidyverse)
library(skimr)
library(janitor)
library(tidymodels)
library(openintro)
library(lubridate)
library(scales)
library(gridExtra)
```

```{r}
#| label: collection-cleaning
#| echo: false
#| message: false
#| warning: false

soccer <- read_csv("data/top_goalscorers.csv")
soccer <- clean_names(soccer)

soccer_clean <- soccer |>
  mutate(
    player_height_cm = as.numeric(gsub(" cm", "", soccer$player_height)),
    player_weight_kg = as.numeric(gsub(" kg", "", soccer$player_weight))
  ) |>
  select(-c(
    games_number, goals_saves, dribbles_past, penalty_won,
    penalty_commited, player_height, player_weight, penalty_saved,
    player_id_1, player_id_48, player_firstname, league_season
  ))

# soccer_clean
# glimpse(soccer_clean)
```

## Analysis #1: What factors influence booking frequency of players? Specifically, do player height, weight, age, or games rating have a statistically significant influence?

### Summary Statistics #1:

```{r}
#| label: summ-stats-1
#| echo: false
#| message: false
#| warning: false

soccer_clean |>
  drop_na(games_rating) |>
  mutate(
    total_bookings = cards_yellow + cards_red + cards_yellowred,
    high_cat = if_else(games_rating >= mean(games_rating), 
                       "Highly Rated", "Non-Highly Rated"),
    high_cat = as.factor(high_cat),
    high_cat = fct_relevel(.f = high_cat, "Non-Highly Rated", "Highly Rated"),
    player_weight_lb = (player_weight_kg * 2.2)
  ) |>
  group_by(high_cat) |>
  summarize(
    med_height_cm = median(player_height_cm, na.rm = TRUE),
    med_bookings = median(total_bookings, na.rm = TRUE),
    med_weight_lb = median(player_weight_lb, na.rm = TRUE),
    med_age = median(player_age, na.rm = TRUE)
  )

soccer_clean |>
  drop_na(games_rating) |>
  mutate(
    total_bookings = cards_yellow + cards_red + cards_yellowred,
    high_cat = if_else(games_rating >= mean(games_rating), 
                       "Highly Rated", "Non-Highly Rated"),
    high_cat = as.factor(high_cat),
    high_cat = fct_relevel(.f = high_cat, "Non-Highly Rated", "Highly Rated"),
    player_weight_lb = (player_weight_kg * 2.2)
  ) |>
  group_by(high_cat) |>
  summarize(
    avg_height_cm = mean(player_height_cm, na.rm = TRUE),
    avg_bookings = mean(total_bookings, na.rm = TRUE),
    avg_weight_lb = mean(player_weight_lb, na.rm = TRUE),
    avg_age = mean(player_age, na.rm = TRUE)
  )
```

### Explanatory Data Analysis #1

In order to investigate this question, we conducted a preliminary exploratory data analysis to visualize the relationships between those variables are total booking:

```{r}
#| label: eda-plots-1
#| echo: false
#| message: false
#| warning: false

# Height vs Bookings
g1 <- soccer_clean |>
  mutate(
    total_bookings = cards_yellow + cards_red + cards_yellowred
  ) |>
  ggplot(mapping = aes(x = player_height_cm, y = total_bookings)) +
  geom_jitter() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "Player Height (in cm)",
    y = "Total Bookings",
    title = "Do taller players tend \nto get booked more frequently?"
  ) +
  theme_minimal()

# Weight vs Bookings
g2 <- soccer_clean |>
  mutate(
    total_bookings = cards_yellow + cards_red + cards_yellowred,
    player_weight_lb = (player_weight_kg * 2.2)
  ) |>
  ggplot(mapping = aes(x = player_weight_lb, y = total_bookings)) +
  geom_jitter() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "Player Weight (in lb)",
    y = "Total Bookings",
    title = "Do heavier players tend \nto get booked more frequently?"
  ) + 
  theme_minimal()

# Age vs Bookings
g3 <- soccer_clean |>
  mutate(
    total_bookings = cards_yellow + cards_red + cards_yellowred,
    player_age_yrs = (2021 - year((date(player_birth_date))))
  ) |>
  ggplot(mapping = aes(x = player_age_yrs, y = total_bookings)) +
  geom_jitter() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "Player Age (in years)",
    y = "Total Bookings",
    title = "Do older players tend \nto get booked more frequently?"
  ) +
  theme_minimal()

# Rating (cont) vs Bookings
g4 <- soccer_clean |>
  mutate(
    total_bookings = cards_yellow + cards_red + cards_yellowred
  ) |>
  ggplot(mapping = aes(x = games_rating, y = total_bookings)) +
  geom_jitter() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "Player Rating (Across Season Games)",
    y = "Total Bookings",
    title = "Do higher-rated players tend \nto get booked more frequently?"
  ) +
  theme_minimal()

# Rating (cat) vs Bookings
g5 <- soccer_clean |>
  drop_na(games_rating) |>
  mutate(
    total_bookings = cards_yellow + cards_red + cards_yellowred,
    high_cat = if_else(games_rating >= mean(games_rating), 
                       "Highly Rated", "Non-Highly Rated"),
    high_cat = as.factor(high_cat),
    high_cat = fct_relevel(.f = high_cat, "Non-Highly Rated", "Highly Rated")
  ) |>
  ggplot(mapping = aes(x = high_cat, y = total_bookings)) +
  geom_boxplot() +
  labs(
    x = "Player Rating (Across Season Games)",
    y = "Total Bookings",
    title = "Do highly-rated players tend \nto get booked more frequently \nthan non-highly rated players?"
  ) +
  theme_minimal()

grid.arrange(g1, g2, g3, nrow = 2)
grid.arrange(g4, g5, nrow = 1)
```

Based on our EDA, there appeared as though non-highly ranked players were booked more than highly ranked players, where highly ranked players were rated greater than or equal to the mean player rating, and non-highly ranked players were rated less than the mean player rating.

### Identifying Important Predictors #1

Then, we fit a multiple linear regression line that predicted total bookings based on those variables to determine if any were actually statistically significant, and worth investigating through a hypothesis test in our "Evaluation of Significance" section:

```{r}
#| label: bookings-height-weight-age-rating
#| echo: false

bookings_factors_data <- soccer_clean |>
  mutate(
    total_bookings = cards_yellow + cards_red + cards_yellowred,
    player_weight_lb = (player_weight_kg * 2.2)
  )

bookings_reg <- linear_reg() |>
  fit(total_bookings ~ player_height_cm + player_weight_lb + 
        player_age + games_rating,
      data = bookings_factors_data)

tidy(bookings_reg)
# glance(bookings_reg)
```

Based on the above results, player rating (represented by games_rating) was the only predictor with a p-value \< the significance level, 0.05. Furthermore, based on our side-by-side box plot representing the distribution of total bookings for highly rated players vs non-highly rated players in our explanatory data analysis, it appeared as though non-highly ranked players get booked more frequently. However, the visualization itself did not tell us if that difference was significant. In the following section, we will conduct a hypothesis test to evaluate this.

## Analysis #2: Are some leagues more aggressive, on average, than others?

### Summary Statistics #2:

```{r}
#| label: summ-stats-2
#| message: false
#| warning: false

european_countries <- c("Belgium", "England", "France", "Germany", "Italy", 
                        "Netherlands", "Portugal", "Spain")

soccer_clean <- soccer_clean |>
  mutate(
    is_european = ifelse(league_country %in% european_countries, "European", "Non-European")
  )

soccer_clean |>
  mutate(
    avg_penalty_by_game = (penalty_scored + penalty_missed) / games_appearences,
    avg_goals_per_min = goals_total / games_minutes,
    avg_shots_per_game = shots_total / games_appearences
  ) |>
  group_by(is_european) |>
  summarize(
    med_penalty = median(avg_penalty_by_game, na.rm = TRUE),
    med_gpm = median(avg_goals_per_min, na.rm = TRUE),
    med_shots = median(avg_shots_per_game, na.rm = TRUE),
    med_duels = median(duels_total, na.rm = TRUE)
  )

soccer_clean |>
  mutate(
    avg_penalty_by_game = (penalty_scored + penalty_missed) / games_appearences,
    avg_goals_per_min = goals_total / games_minutes,
    avg_shots_per_game = shots_total / games_appearences
  ) |>
  group_by(is_european) |>
  summarize(
    avg_penalty = mean(avg_penalty_by_game, na.rm = TRUE),
    avg_gpm = mean(avg_goals_per_min, na.rm = TRUE),
    avg_shots = mean(avg_shots_per_game, na.rm = TRUE),
    avg_duels = mean(duels_total, na.rm = TRUE)
  )

```

### Explanatory Data Analysis #2

Aggressiveness is not a variable in our data set, therefore we indirectly measured this through booking frequency, average penalties per game, average goals per minute, average shots per game, and total duels. We also compared European leagues against non-European leagues.

```{r}
#| label: analysis-plots-2
#| message: false
#| warning: false

# How does the frequency of bookings (cards_yellow, cards_red, cards_redyellow) 
# between different leagues, impact the average goals per match? 
# Does this differ across European and non European leagues?
g6 <- soccer_clean |>
  mutate(
    avg_penalty_by_game = (penalty_scored + penalty_missed) / games_appearences
  ) |>
  ggplot(mapping = aes(x = is_european, y = avg_penalty_by_game)) +
  geom_boxplot() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "League Group",
    y = "Average Penalty By Game",
    title = "Do European leagues tend to have \nmore average penalties per game \nthan non-European leagues?"
  ) +
  theme_minimal()

# How do goals per minutes (on average) (i.e. goals_total / games_minutes and 
# group_by(league)) differ within leagues?
g7 <- soccer_clean |>
  mutate(
    # total_bookings = cards_yellow + cards_red + cards_yellowred,
    avg_goals_per_min = goals_total / games_minutes
  ) |>
  # filter(avg_goals_per_min <= 0.015) |>
  ggplot(mapping = aes(x = is_european, y = avg_goals_per_min)) +
  geom_boxplot() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "League Group",
    y = "Average Goals per Minute",
    title = "Do European leagues tend to \nscore more goals than \nnon-European leagues?"
  ) +
  theme_minimal()

# Do the average amount of shots per game differ across leagues?
g8 <- soccer_clean |>
  mutate(
    # total_bookings = cards_yellow + cards_red + cards_yellowred,
    avg_shots_per_game = shots_total / games_appearences
  ) |>
  ggplot(mapping = aes(x = is_european, y = avg_shots_per_game)) +
  geom_boxplot() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "League Group",
    y = "Average Shots Per Game",
    title = "Do European leagues tend to take more \naverage shots per game than \nnon-European leagues?"
  ) +
  theme_minimal()

# Does number of duels (duels_total) differ across leagues?
g9 <- soccer_clean |>
  ggplot(mapping = aes(x = is_european, y = duels_total)) +
  geom_boxplot() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "League Group",
    y = "Total Duels",
    title = "Do European leagues tend to duel \nmore than non-European leagues?"
  ) +
  theme_minimal()

grid.arrange(g6, g7, g8, g9, nrow = 2)
```

Based on the EDA, it is difficult to discern which league is more than aggressive than the other.

### Identifying Important Predictors #2

Next, we fit a logistic regression line that predicted whether the league group was European or not, based on above variables to determine if any were actually statistically significant, and worth investigating through a hypothesis test in our "Evaluation of Significance" section:

```{r}
#| label: aggressiveness-eu
#| message: false
#| warning: false

agg_data <- soccer_clean |>
  mutate(
  avg_penalty_by_game = (penalty_scored + penalty_missed) / games_appearences,
  avg_goals_per_min = goals_total / games_minutes,
  avg_shots_per_game = shots_total / games_appearences,
  is_european = as.factor(is_european)
  )

agg_reg <- logistic_reg() |>
  fit(is_european ~ avg_penalty_by_game + avg_goals_per_min + avg_shots_per_game + duels_total,
      data = agg_data)

tidy(agg_reg)
```

Based on our results, average goals per minute and total duels were the only predictors with p-values \< the significance level, 0.05 (at 3.869903e-06 and 1.195738e-07, respectively). In the following section, we will conduct a hypothesis test to evaluate the difference in "aggressiveness" of European and non-European leagues.

# Evaluation of significance

## Analysis #1: Two-sided hypothesis test for difference in means of bookings for highly rated players (players with ratings greater than or equal to the mean player rating) and non-highly rated players (players with ratings less than mean player rating)

-   Null Hypothesis: The true population mean for bookings of highly rated players and non-highly rated players are not different. $H_0 = \mu_{high} - \mu_{non-high} = 0$

-   Alternative Hypothesis: The true population mean for bookings of highly rated players and non-highly rated players are different. $H_A = \mu_{high} - \mu_{non-high} \not= 0$

```{r}
#| label: hyp-test-rank-book
#| echo: false
#| fig-height: 3
#| fig-width: 4

set.seed(234)

book_rank <- soccer_clean |>
  drop_na(games_rating) |>
  mutate(
    total_bookings = cards_yellow + cards_red + cards_yellowred,
    high_cat = if_else(
      games_rating >= mean(games_rating), 
      "Highly Ranked", "Non-Highly Ranked"),
    high_cat = as.factor(high_cat)
  )

bookings_diff <- book_rank |>
  specify(total_bookings ~ high_cat) |>
  calculate(stat = "diff in means", order = c("Highly Ranked", "Non-Highly Ranked"))

null_dist <- book_rank |>
  specify(total_bookings ~ high_cat) |>
  hypothesize(null = "independence") |>
  generate(1000, type = "permute") |>
  calculate(stat = "diff in means", order = c("Highly Ranked", "Non-Highly Ranked"))

null_dist |>
  get_p_value(obs_stat = bookings_diff, direction = "two sided")

visualize(null_dist) +
  shade_p_value(obs_stat = bookings_diff, direction = "two sided") + theme_minimal()
```

*Conclusion:* The p-value (0.02) is less than alpha i.e. significance level of 0.05, therefore we reject the null hypothesis. The data provides convincing evidence that the true population mean for bookings of highly rated players and non-highly rated players are different.

## Analysis #2a: Two-sided hypothesis test for difference in means of duels for European leagues and non-European leagues

-   Null hypothesis: The true population mean of duels for European and non-European leagues are not different. $H_0 = \mu_{EU} - \mu_{non-EU} = 0$

-   Alternative hypothesis: The true population mean of duels for European and non-European leagues are different. $H_A = \mu_{EU} - \mu_{non-EU} \not= 0$

```{r}
#| label: hyp-test-euro-duels
#| echo: false
#| message: false
#| warning: false
#| fig-height: 3
#| fig-width: 4

set.seed(234)

duels_diff <- soccer_clean |>
  specify(duels_total ~ is_european) |>
  calculate(stat = "diff in means", order = c("European", "Non-European"))

null_dist <- soccer_clean |>
  specify(duels_total ~ is_european) |>
  hypothesize(null = "independence") |>
  generate(1000, type = "permute") |>
  calculate(stat = "diff in means", order = c("European", "Non-European"))

null_dist |>
  get_p_value(obs_stat = duels_diff, direction = "two sided")

visualize(null_dist) +
  shade_p_value(obs_stat = duels_diff, direction = "two sided") + theme_minimal()
```

*Conclusion:* The p-value (0) is less than alpha i.e. significance level of 0.05, therefore we reject the null hypothesis. The data provides convincing evidence that the the true population mean of duels for European and non-European leagues are different.

## Analysis #2b: Two-sided hypothesis test for difference in means of average goals per minute for European leagues and non-European leagues

-   Null hypothesis: The true population mean of goals per minute for European and non-European leagues are not different. $H_0 = \mu_{EU} - \mu_{non-EU} = 0$

-   Alt hypothesis: The true population mean of goals per minute for European and non-European leagues are different. $H_A = \mu_{EU} - \mu_{non-EU} = 0$

```{r}
#| label: hyp-test-goalspermin
#| echo: false
#| message: false
#| warning: false

set.seed(234)

soccer_clean <- soccer_clean |>
    mutate(avg_goals_per_min = goals_total / games_minutes)

gpm_diff <- soccer_clean |>
  specify(avg_goals_per_min ~ is_european) |>
  calculate(stat = "diff in means", order = c("European", "Non-European"))

null_dist <- soccer_clean |>
  specify(avg_goals_per_min ~ is_european) |>
  hypothesize(null = "independence") |>
  generate(1000, type = "permute") |>
  calculate(stat = "diff in means", order = c("European", "Non-European"))

null_dist |>
  get_p_value(obs_stat = gpm_diff, direction = "two sided")
```

*Conclusion:* The p-value (0.196) is greater than alpha i.e. significance level of 0.05, therefore we fail to reject the null hypothesis. The data provides convincing evidence that the the true population mean of average goals per minute for European and non-European leagues are not different.

# Interpretation and conclusions

## **Analysis #1**

```{r}
#| label: bookings-ratings
#| echo: false
#| message: false
#| warning: false

bookings_ratings <- linear_reg() |>
  fit(total_bookings ~ games_rating,
      data = bookings_factors_data)

tidy(bookings_ratings)
```

Based on our multiple linear regression line predicting bookings from player height, weight, age, and rating, **only rating was found to be a significant predictor of bookings**, resulting in the following formula:

$$
\widehat{bookings} = 12.372558 - 1.185715 \times player~rating
$$

Interpretation:

-   Intercept: For a player with a player rating of 0, we expect their booking frequency to be 12.372558, on average.

-   Slope: For every one-point that the player's rating is higher, we expect their booking frequency to be 1.185715 lower, on average.

Based on adjusted R-squared value, only 1% of the variability in booking is explained by the model, specifically player rating, which makes this a poor predictor. However, this performs better than the full model, which explains less than 1% of the variability in booking.

Based on our first hypothesis test, **we found that the difference in true population means of highly rated players (players with ratings greater than or equal to the mean player rating) and non-highly rated players (players with ratings less than mean player rating) is statistically significant.** Furthermore, using our exploratory data analysis, we can support that this difference is a result of non-highly ranked players being booked more than highly ranked players, on average.

```{r}
#| label: booking-rating-ci
#| echo: false
set.seed(123)

b_r_ci <- book_rank |>
  specify(total_bookings ~ high_cat) |>
  generate(reps = 1000, type = "bootstrap") |>
  calculate(stat = "diff in means", order = c("Non-Highly Ranked", "Highly Ranked"))

get_ci(x = b_r_ci, level = 0.95)
```

This makes sense, as based on our confidence interval (from bootstrapping), we are 95% confident that the difference between the true population means of bookings for non-highly ranked and highly ranked players is between 0.14 and 1.2 (i.e. positive). **So, we are 95% confident that that non-highly ranked players are booked more than highly ranked players.**

## **Analysis #2**

```{r}
#| label: eu-gpm-duels
#| echo: false
#| message: false
#| warning: false

eu_gpm_duels <- logistic_reg() |>
  fit(is_european ~ avg_goals_per_min + duels_total,
      data = agg_data)
tidy(eu_gpm_duels)
```

Based on our logistic regression line predicting if a league is European from average penalties per game, average goals per minute, average shots per game, and total duels, **only average goals per minute and total duels were found to be significant predictors of league**, resulting in the following formula:

$$ p = \frac{\exp\{-1.903256924 + 240.017572079 \times average~gpm + 0.004831097 \times duels\}}{1 + \exp\{-1.903256924 + 240.017572079 \times average~gpm + 0.004831097 \times duels\}}$$

Interpretation of Slope Coefficients:

-   `average gpm:` For every 1 goal that average gpm is higher, we expect the log odds of being a European league to be, on average, 240.017572079 larger, all else held constant.

-   `total duels:` For everyone 1 duel that total duels is higher, we expect the log odds of being a European league to be, on average, 0.004831097 larger, all else held constant.

Based on our second hypothesis test, we found that **the true population means of duels for European and non-European leagues are statistically different.** Our EDA suggested that European leagues duel more than non-European leagues, on average.

```{r}
#| label: euro-duels-ci
#| echo: false

set.seed(234)

eu_duels_ci <- soccer_clean |>
  specify(duels_total ~ is_european) |>
  generate(reps = 1000, type = "bootstrap") |>
  calculate(stat = "diff in means", order = c("European", "Non-European"))

get_ci(x = eu_duels_ci, level = 0.95)
```

This makes sense, as based on our confidence interval (from bootstrapping), we are 95% confident that the difference between the true population means of duels for European and non-European leagues is between 30.63766 and 86.54825 (i.e. positive), implying that European leagues duel more than non-European leagues, on average. **So, we are 95% confident that European leagues duel more than non-European leagues.**

However, based on our final hypothesis test, **we did not find a significant difference in true means for average goals per minute of European and non-European leagues.** Therefore, duels was the only "significantly different" proxy for aggressiveness from our multiple linear regression. Since duels were found to be significantly more for European leagues, but there was no difference for average goals per minute, **we do not have conclusive evidence that European or non-European leagues are more aggressive than the other.**

# Limitations

The primary limitation of our dataset is that it solely uses information from the 2021 season. Consequently, it restricts our ability to analyze and compare trends within groups, such as players, teams, or leagues over an extended period. Additionally, we assume that there are no goalies present as our dataset exclusively focuses on goal scorers. This specific focus prevents us from evaluating a team's defensive capabilities, which can be important when assessing the strength of an overall team.

Given the nature of our dataset, it is important to acknowledge that there may be coverage bias in our analysis. The dataset primarily focuses on scoring and offensive statistics, which may not provide a comprehensive representation of a player's overall performance and impact on their team. Furthermore, our analysis is susceptible to various contextual factors that can introduce additional biases. Factors such as the strength of opponents, tactical approaches employed by teams and players, and unpredictable game-day conditions can significantly influence player performance and the statistics they produce.

# Acknowledgments

In working on our project, we found several resources to be useful. For one, we would like to give credit to the API that we used to collect the data as well as to Stack Overflow for assisting with the API interaction as well as JSON handling in R. More specifically, the API was provided by https://www.api-football.com and specific documentation on how to interact with the endpoints in different languages was given by RapidAPI.

Apart from this, we took inspiration from some of the organization we saw during our peer review section. Specifically, after looking at the Skillful Charmander group, we decided to re-organize our analysis sections.

Beyond our specific technical and organizational acknowledgements, we would like to acknowledge our appreciation for the course staff and teaching assistants who helped us in answering any questions we have had along the way.
