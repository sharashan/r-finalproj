---
title: "Project title"
subtitle: "Report"
format: html
editor: visual
execute:
  echo: false
---

# Introduction

This motivation behind this project was to determine whether or not there were relationships between soccer players or leagues, and statistics. The data for the top 20 football goal scorers in 2021 for the leagues specified in our GET request were sourced from: https://www.api-football.com/documentation-v3. Each observation also includes descriptors such as height, weight, nationality, passes, goals scored, assists, penalties, etc. Through our project we aimed to answer the following research questions:

-   RQ 1 (Players): Is there a correlation between the height, weight, age, and/or player rating on specific game statistics (Including, but not limited to: goals scored, assists, penalties, passes, etc.)?

-   RQ 2 (Leagues): Do game statistics differ across leagues (goals_total)?

We found that there were not significant relationships in the EDA, and further confirmed so in our "Evaluation of Significance" section. However, it was found that one game statistic did significantly differ between European and non-European leagues\_ number of total duels.

# Data description

This dataset was created to rank and compare the top scoring football players across top leagues. This could be helpful for football fans, sports betters, or data scientists. There are 560 observations and 51 attributes (columns). The dataset contains player statistics (ex/ number of appearances, number of minutes played, number of yellow or red cards attained) for the top 20 scorers from the top 27 football leagues for the 2021 league season. The people involved are football players, who are aware of data collection, as this occurs during and after all of their games, because sports data is typically used to make general comparison (past/future versions of themselves, comparing their team to another, or between leagues, sports reporting (to football fans), or MVP decisions. As this is game data, it was likely influenced by referee rulings, as some scores may not have counted in the final game statistics.

-   What preprocessing was done

    -   (see above in Data collection and cleaning)

    -   ***Summarize more briefly??:*** The data was first collected by making API calls from https://www.api-football.com/documentation-v3 for various soccer leagues. We did this my making a GET request to their top scorers endpoint, supplying parameters for each of 27 top leagues in 2021. From this we collected 20 goal scorers for each respective league as we specified per the query string parameters. From this point, we used the jsonlite library to flatten the JSON API responses into a tibble and then exported the tibble to a CSV file.

        Once we had our data stored in a CSV file, we wrote code to load it in R and then began the cleaning process. The main reason why we stored the data to a CSV rather than dynamically making API calls is due to the rate limits and fees associated with using the API. For the main cleaning process, we utilized the clean_names function from the janitor library to make sure our variable names conform to R naming conventions. After this, we dropped the columns we would not be using by employing a select statement on our data frame. Originally, our data set had columns that were relevant to goalkeepers, defenders, and other players that are not primarily goalscorers. We also noticed that our height and weight columns were not sanitized and in character form versus numeric, thus we sanitized these columns added the units to the variable name and dropped the old columns. Lastly, we made sure to remove any columns that appeared to be duplicates like player_id_48, player_id_1, and player_firstname.

# Data analysis

```{r}
#| label: load-data
#| echo: false
#| message: false
#| warning: false

library(tidyverse)
library(skimr)
library(janitor)
library(tidymodels)
library(openintro)
library(lubridate)
library(scales)
```

```{r}
#| label: collection-cleaning
#| message: false
#| warning: false

soccer <- read_csv("data/top_goalscorers.csv")
soccer <- clean_names(soccer)

soccer_clean <- soccer |>
  mutate(
    player_height_cm = as.numeric(gsub(" cm", "", soccer$player_height)),
    player_weight_kg = as.numeric(gsub(" kg", "", soccer$player_weight))
  ) |>
  select(-c(
    games_number, goals_saves, dribbles_past, penalty_won,
    penalty_commited, player_height, player_weight, penalty_saved,
    player_id_1, player_id_48, player_firstname, league_season
  ))

soccer_clean

glimpse(soccer_clean)
```

#### Analysis #1: What factors influence booking frequency of players?

Specifically, does player height, weight, age, or games rating have

Pre-registered hypothesis: Taller, heavier, older, and more highly rated players get booked more frequently than shorter, less heavy, younger, less highly rated players.

```{r}
#| label: eda-plots-1
#| message: false
#| warning: false

# Do taller players tend to get booked more frequently?
soccer_clean |>
  mutate(
    total_bookings = cards_yellow + cards_red + cards_yellowred
  ) |>
  ggplot(mapping = aes(x = player_height_cm, y = total_bookings)) +
  geom_jitter() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "Player Height (in cm)",
    y = "Total Bookings",
    title = "Do taller players tend to get booked \nmore frequently?"
  )

# Do taller players tend to get booked more frequently (Premier League)?
soccer_clean |>
  mutate(
    total_bookings = cards_yellow + cards_red + cards_yellowred
  ) |>
  filter(
    league_id == 39
  ) |>
  ggplot(mapping = aes(x = player_height_cm, y = total_bookings)) +
  geom_jitter() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "Player Height (in cm)",
    y = "Total Bookings",
    title = "Do taller players tend to get booked \nmore frequently?"
  )

# Do heavier players tend to get booked more frequently?
soccer_clean |>
  mutate(
    total_bookings = cards_yellow + cards_red + cards_yellowred,
    player_weight_lb = (player_weight_kg * 2.2)
  ) |>
  ggplot(mapping = aes(x = player_weight_lb, y = total_bookings)) +
  geom_jitter() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "Player Weight (in lb)",
    y = "Total Bookings",
    title = "Do heavier players tend to get booked \nmore frequently?"
  )

# Do older players tend to get booked more frequently?
soccer_clean |>
  mutate(
    total_bookings = cards_yellow + cards_red + cards_yellowred,
    player_age_yrs = (2021 - year((date(player_birth_date))))
  ) |>
  ggplot(mapping = aes(x = player_age_yrs, y = total_bookings)) +
  geom_jitter() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "Player Age (in years)",
    y = "Total Bookings",
    title = "Do older players tend to get booked \nmore frequently?"
  )

# Do higher-rated players tend to get booked more frequently?
soccer_clean |>
  mutate(
    total_bookings = cards_yellow + cards_red + cards_yellowred,
  ) |>
  ggplot(mapping = aes(x = games_rating, y = total_bookings)) +
  geom_jitter() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "Player Rating (Across Season Games)",
    y = "Total Bookings",
    title = "Do higher-rated players tend to get booked \nmore frequently?"
  )
```

```{r}
#| label: bookings-height-weight-age-rating

bookings_factors_data <- soccer_clean |>
  mutate(
    total_bookings = cards_yellow + cards_red + cards_yellowred,
    # player_age_yrs = (2021 - year((date(player_birth_date)))),
    player_weight_lb = (player_weight_kg * 2.2)
  )

bookings_reg <- linear_reg() |>
  fit(total_bookings ~ player_height_cm + player_weight_lb + 
        player_age + games_rating,
      data = bookings_factors_data)

tidy(bookings_reg)
```

Based on the above results, player rating is the only predictor with a p-value \< the significance level, 0.05. The following hypothesis test is to determine whether or not the true difference in population means of higher rated players (players with ratings \>= mean) and lower rated players (players with ratings \< mean) is significant:

-   Null Hypothesis: The true population mean of bookings for highly rated players and non-highly rated players are not different, on average. $$ \mu_{high books} - \mu_{non-high books} = 0 $$

-   Alternative Hypothesis: The true population mean of bookings for highly rated players and non-highly rated players are different, on average.

$$
\mu_{high books} - \mu_{non-high books} \not = 0
$$

```{r}
#| label: hyp-test-rank-book
#| echo: false

set.seed(234)

book_rank <- soccer_clean |>
  drop_na(games_rating) |>
  mutate(
    total_bookings = cards_yellow + cards_red + cards_yellowred,
    high_cat = if_else(
      games_rating >= mean(games_rating), 
      "high rank", "non high rank"),
    high_cat = as.factor(high_cat)
  )

bookings_diff <- book_rank |>
  specify(total_bookings ~ high_cat) |>
  calculate(stat = "diff in means", order = c("high rank", "non high rank"))

null_dist <- book_rank |>
  specify(total_bookings ~ high_cat) |>
  hypothesize(null = "independence") |>
  generate(1000, type = "permute") |>
  calculate(stat = "diff in means", order = c("high rank", "non high rank"))

null_dist |>
  get_p_value(obs_stat = bookings_diff, direction = "two sided")
```

The p-value (0.02) is \< alpha i.e. significance level of 0.05, therefore we reject the null hypothesis. The data provides convincing evidence that on average, the difference in true population mean of bookings for highly rater players and non-highly rated players are different.

### Analysis #2:

Question: Are some leagues more aggressive, on average, than others?

Pre-registered hypothesis: European leagues are, on average, more aggressive than non-European leagues (i.e. more fouls, more goals per minute, and more duels.)

```{r}
#| label: analysis-plots-2
#| message: false
#| warning: false

soccer_clean |>
  group_by(league_country) |>
  summarize(n = n())

european_countries <- c("Belgium", "England", "France", "Germany", "Italy", 
                        "Netherlands", "Portugal", "Spain")

soccer_clean <- soccer_clean |>
  mutate(
    is_european = ifelse(league_country %in% european_countries, "Yes", "No")
  )

# How does the frequency of bookings (cards_yellow, cards_red, cards_redyellow) 
# between different leagues, impact the average goals per match? 
# Does this differ across European and non European leagues?
soccer_clean |>
  mutate(
    # total_bookings = cards_yellow + cards_red + cards_yellowred,
    avg_penalty_by_game = (penalty_scored + penalty_missed) / games_appearences
  ) |>
  ggplot(mapping = aes(x = is_european, y = avg_penalty_by_game)) +
  geom_boxplot() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "European",
    y = "Average Penalty By Game",
    title = "Do European Leagues tend to have more average \npenalties per game 
than non-European leagues?"
  )

# How do goals per minutes (on average) (i.e. goals_total / games_minutes and 
# group_by(league)) differ within leagues?
soccer_clean |>
  mutate(
    # total_bookings = cards_yellow + cards_red + cards_yellowred,
    avg_goals_per_min = goals_total / games_minutes
  ) |>
  # filter(avg_goals_per_min <= 0.015) |>
  ggplot(mapping = aes(x = is_european, y = avg_goals_per_min)) +
  geom_boxplot() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "European",
    y = "Average Goals per Minute",
    title = "Do European Leagues tend to have score more more goals,\n on average, than non-European leagues?"
  )

# Do the average amount of shots per game differ across leagues?
soccer_clean |>
  mutate(
    # total_bookings = cards_yellow + cards_red + cards_yellowred,
    avg_shots_per_game = shots_total / games_appearences
  ) |>
  ggplot(mapping = aes(x = is_european, y = avg_shots_per_game)) +
  geom_boxplot() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "European",
    y = "Average Shots Per Game",
    title = "Do European Leagues tend to  take more shots per game,\n on 
average, than non-European leagues?"
  )

# Does number of duels (duels_total) differ across leagues?
soccer_clean |>
  # filter(duels_total <= 750) |>
  ggplot(mapping = aes(x = is_european, y = duels_total)) +
  geom_boxplot() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "European",
    y = "Total Duels",
    title = "Do European Leagues tend to duel more,\n on average, 
than non-European leagues?"
  )

#### IGNORE
# Does the pct of reds are straight red
soccer_clean |>
  # mutate(
  #   total_red = (cards_red + cards_yellowred),
  # ) |>
  group_by(is_european) |>
  summarize(
    red = sum(cards_yellowred + cards_red),
    yr = sum(cards_yellowred),
    s_red = sum(cards_red)
  ) |>
  filter((red + yr) > 0) |>
  # mutate(
  #   pct_straightred = s_red / (red + yr)
  # ) |>
  # mutate(
  #    pct_non_straightred = 1 - pct_straightred
  # ) |>
  ggplot(aes(red, fill = yr)) +
  # facet_grid(facets = vars(is_european)) +
  geom_bar(position = "fill") +
  labs(
    x = "European",
    y = "Percent of Red Cards that are Straight Red",
    title = "Do European Leagues tend to have higher perecentages \nof red cards 
that are straight red (on average) than non-European leagues?"
  ) +
  scale_y_continuous(labels = label_percent())
```

# Evaluation of significance

Analysis 2: Does the number of duels, on average, differ between European and non-European leagues?

-   Null hypothesis: The true population mean of duels for European and non-European players are not different, on average. $$ \mu_{EU duel} - \mu_{non-EU duel} = 0 $$

-   Alt hypothesis: The true population mean of duels for European and non-European players are different, on average.

$$ \mu_{EU duel} - \mu_{non-EU duel} \not= 0
$$

```{r}
#| label: hyp-test-euro-duels
#| echo: false
#| message: false
#| warning: false

set.seed(234)

duels_diff <- soccer_clean |>
  specify(duels_total ~ is_european) |>
  calculate(stat = "diff in means", order = c("Yes", "No"))

null_dist <- soccer_clean |>
  specify(duels_total ~ is_european) |>
  hypothesize(null = "independence") |>
  generate(1000, type = "permute") |>
  calculate(stat = "diff in means", order = c("Yes", "No"))

null_dist |>
  get_p_value(obs_stat = duels_diff, direction = "two sided")
```

The p-value is \< alpha i.e significance level of 0.05, therefore we reject the null hypothesis. The data provides convincing evidence that the true population mean of bookings for highly rater players and non-highly rated players are different, on average.

# Interpretation and conclusions

Based on the above EDA and a constant slope on the lines of best fit between variables X and Y, there did not appear to be a correlation between:

-   height v booking frequency

-   weight v booking frequency

-   player_rating v booking frequency (not statistically significant, see above A1)

    -   this was further supported by hypothesis testing conducted in the "Evaluation of Significance" section (Analysis 1), whose conclusion supported that because p-value \> 0.05, we fail to reject the null hypothesis. I.e. *the data does not provide convincing evidence that the true population mean of bookings for highly rater players and non-highly rated players are different, on average.*

-   league v. goals per min

-   league v. shots per game

-   league v. penalties per game

However, the following relationships were found to be significant:

-   league v. duels per game

    -   This was further supported by hypothesis testing conducted in the "Evaluation of Significance" section (Analysis 2), whose conclusion supported that since the p-value is \< 0.05, we reject the null hypothesis. I.e. *the data provides convincing evidence that the true population mean of bookings for highly rater players and non-highly rated players are different, on average.*

# Limitations

One limitation of this dataset is that it only contains information from the 2021 season. Therefore, we cannot make comparisons within groups (player, team, or league) over time. We also assume that there are no goalies in the dataset (best scorers i.e. offensive players), as this only contains goal scorers. Therefore, we are unable to assess a team's defense, which can be important when considering how good a team is!

***Add: is there a bias in our data?***

# Acknowledgments \[John\]

# Appendix

### Data Collection and Cleaning

Have an initial draft of your data cleaning appendix. Document every step that takes your raw data file(s) and turns it into the analysis-ready data set that you would submit with your final project. Include text narrative describing your data collection (downloading, scraping, surveys, etc) and any additional data curation/cleaning (merging data frames, filtering, transformations of variables, etc). Include code for data curation/cleaning, but not collection.

```{r}
#| label: data-collection-cleaning-appendix
#| echo: false
#| message: false
#| warning: false

library(tidyverse)
library(skimr)
library(janitor)

soccer <- read_csv("data/top_goalscorers.csv")
soccer <- clean_names(soccer)

soccer_clean <- soccer |>
  mutate(
    player_height_cm = as.numeric(gsub(" cm", "", soccer$player_height)),
    player_weight_kg = as.numeric(gsub(" kg", "", soccer$player_weight))
  ) |>
  select(-c(
    games_number, goals_saves, dribbles_past, penalty_won,
    penalty_commited, player_height, player_weight, penalty_saved,
    player_id_1, player_id_48, player_firstname, league_season
  ))

soccer_clean

glimpse(soccer_clean)
```

The data was first collected by making API calls from https://www.api-football.com/documentation-v3 for various soccer leagues. We did this my making a GET request to their top scorers endpoint, supplying parameters for each of 27 top leagues in 2021. From this we collected 20 goal scorers for each respective league as we specified per the query string parameters. From this point, we used the jsonlite library to flatten the JSON API responses into a tibble and then exported the tibble to a CSV file.

Once we had our data stored in a CSV file, we wrote code to load it in R and then began the cleaning process. The main reason why we stored the data to a CSV rather than dynamically making API calls is due to the rate limits and fees associated with using the API. For the main cleaning process, we utilized the clean_names function from the janitor library to make sure our variable names conform to R naming conventions. After this, we dropped the columns we would not be using by employing a select statement on our data frame. Originally, our data set had columns that were relevant to goalkeepers, defenders, and other players that are not primarily goalscorers. We also noticed that our height and weight columns were not sanitized and in character form versus numeric, thus we sanitized these columns added the units to the variable name and dropped the old columns. Lastly, we made sure to remove any columns that appeared to be duplicates like player_id_48, player_id_1, and player_firstname.
